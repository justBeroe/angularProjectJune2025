const express = require('express');
const cors = require('cors');
const axios = require('axios');

const app = express();
app.use(cors());
app.use(express.json());

let songsCache = []; // store fetched tracks here

// Route to fetch from Deezer and store in memory
app.get('/api/fetch-deezer', async (req, res) => {
  try {
    const response = await axios.get('https://api.deezer.com/artist/85/top?limit=10');
    const tracks = response.data.data;

    if (!Array.isArray(tracks)) {
      return res.status(500).json({ error: 'Unexpected Deezer data format' });
    }

    // Save to in-memory cache
    songsCache = tracks.map(track => ({
      id: track.id,
      title: track.title,
      preview: track.preview,
      artist: {
        id: track.artist.id,
        name: track.artist.name,
        picture: track.artist.picture
      },
      album: {
        id: track.album.id,
        title: track.album.title,
        cover: track.album.cover
      }
    }));

    res.json({ message: 'âœ… Data fetched and cached', count: songsCache.length });
  } catch (error) {
    console.error('Error fetching from Deezer:', error.message);
    res.status(500).json({ error: 'Failed to fetch Deezer data', details: error.message });
  }
});

// Route to get cached songs
app.get('/api/songs', (req, res) => {
  res.json(songsCache);
});

const PORT = 4000;
app.listen(PORT, () => {
  console.log(`ðŸš€ Server running on http://localhost:${PORT}`);
});
